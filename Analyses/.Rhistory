axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
# ggsave(file=here("Figures", "Figure_S4_NonAnonym_Medium_Best.png"), plot=gp, dpi=350, width=5.2, height=4)
ggsave(file=here("Figures", "Figure_S4_NonAnonym_Medium_Worst.png"), plot=gp, dpi=350, width=5.2, height=4)
# Regression modeling (Anonymisation(+))
fit.g.i.a <- glmer(Y ~ Lighting + Distance + Position + Rotation + Country + (1|id), data=d.i.a, family=binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(fit.g.i.a)
res.g.i.a <- ggpredict(fit.g.i.a, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Ireland"), type="fixed")
# res.g.i.a <- ggpredict(fit.g.i.a, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.g.i.a
res.g.i.a <- as.data.frame(res.g.i.a) %>% rename(Lighting=x, Distance=group, Rotation=facet, Position=panel) %>%
mutate(Rotation=str_replace_all(Rotation, c("^Center$"="Upright")),
Rotation=factor(Rotation, levels=c("Left", "Upright", "Right")))
res.g.i.a <- ggpredict(fit.g.i.a, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.g.i.a
res.g.i.a <- as.data.frame(res.g.i.a) %>% rename(Lighting=x, Distance=group, Rotation=facet, Position=panel) %>%
mutate(Rotation=str_replace_all(Rotation, c("^Center$"="Upright")),
Rotation=factor(Rotation, levels=c("Left", "Upright", "Right")))
res.g.i.a <- ggpredict(fit.g.i.a, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Ireland"), type="fixed")
# res.g.i.a <- ggpredict(fit.g.i.a, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.g.i.a
res.g.i.a <- as.data.frame(res.g.i.a) %>% rename(Lighting=x, Distance=group, Rotation=facet, Position=panel) %>%
mutate(Rotation=str_replace_all(Rotation, c("^Center$"="Upright")),
Rotation=factor(Rotation, levels=c("Left", "Upright", "Right")))
## Visualization
d.i.a %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(ncrr=sum(Y),
ncrr_prop=ncrr/1) %>%
mutate(Position=factor(Position, levels=c("Sl24"="Left (24 cm)", "Sc00"="Center", "Sr24"="Right (24 cm)")),
Lighting=factor(Lighting, levels=c("Left", "Front", "Right")),
Rotation=str_replace_all(Rotation, c("^Center$"="Upright")),
Rotation=factor(Rotation, levels=c("Left", "Upright", "Right"))) %>%
ggplot(aes(x=Lighting, y=ncrr_prop))+
geom_abline(slope=0, intercept=1/3, linetype="dashed", color="gray30", lwd=0.5)+
geom_jitter(width=0.2, height=0.05, color="gray70", size=0.1, alpha=0.3)+
geom_pointrange(data=res.g.i.a, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
scale_y_continuous(limits=c(-0.05,1.05), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of correct prediction")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
ggsave(file=here("Figures", "Figure_S3_Anonym_Medium.png"), plot=gp, dpi=350, width=8, height=6.5)
## Confusion matrix
### Best condition
d.spec <- d.i.a %>% subset(Lighting=="Front" & Distance=="Close\n(30 cm)" & Position=="Left (24 cm)" & Rotation=="Center")
### Creating Confusion matrix
tmp1 <- d.spec %>% group_by(Actual) %>% summarize(Nact=n())
tmp2 <- d.spec %>% group_by(Prediction) %>% summarize(Npred=n())
d.i.a.mat <- d.spec %>% group_by(Actual, Prediction) %>% summarize(N=n()) %>%
left_join(tmp1, by="Actual") %>%
left_join(tmp2, by="Prediction") %>%
mutate(Recall=N/Nact,
Precision=N/Npred,
Fmeasure=(2*Recall*Precision)/(Recall+Precision))
d.i.a.mat
## Summary stats
d.i.a.mat %>% subset(Actual==Prediction) %>% ungroup() %>% summarize(Accuracy=sum(N)/sum(Nact)) # overall accuracy
d.i.a.mat %>% subset(Actual==Prediction) %>% ungroup() %>% summarize(Fmean=mean(Fmeasure)) # overall F measure (averaged)
## Visualization
d.i.a.mat %>% ggplot(aes(x=Prediction, y=Actual))+
geom_tile(aes(fill=Recall))+
geom_text(aes(label=round(Recall, 2)), size=6)+
scale_fill_gradient(limits=c(0,1), low="white", high="red", name="Prediction/\nActual")+
theme_bw()+
theme(axis.ticks=element_line(color = "black"),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
ggsave(file=here("Figures", "Figure_S3_Anonym_Medium_CM_Best.png"), plot=gp, dpi=350, width=4.2, height=3)
## Visualization: Prediction-Number correspondence
d.spec %>% group_by(trial, Prediction) %>% summarize(Prop=round(n()/40, 2)) %>%
ggplot(aes(x=trial, y=Prop, color=Prediction, shape=Prediction))+
annotate("rect", xmin=2.5, xmax=5.5, ymin=0, ymax=1, fill="#358688", alpha=0.2, color="white")+
annotate("rect", xmin=5.5, xmax=8.5, ymin=0, ymax=1, fill="#B73E35", alpha=0.2, color="white")+
geom_abline(slope=0, intercept=0.333, linetype="dashed", color="gray30", lwd=0.5)+
geom_point(size=3)+
geom_line(aes(group=Prediction), size=1)+
scale_y_continuous(limits=c(0,1), breaks=seq(0,1,0.2))+
scale_x_continuous(limits=c(1,10), breaks=1:10)+
labs(x="Numbered discs", y="Proportion of prediction")+
theme_bw()+
theme(axis.ticks=element_line(color = "black"),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
ggsave(file=here("Figures", "Figure_S4_Anonym_Medium_Best.png"), plot=gp, dpi=350, width=5.2, height=4)
### Worst condition
d.spec <- d.i.a %>% subset(Lighting=="Right" & Distance=="Far\n(90 cm)" & Position=="Right (24 cm)" & Rotation=="Right")
### Creating Confusion matrix
tmp1 <- d.spec %>% group_by(Actual) %>% summarize(Nact=n())
tmp2 <- d.spec %>% group_by(Prediction) %>% summarize(Npred=n())
d.i.a.mat <- d.spec %>% group_by(Actual, Prediction) %>% summarize(N=n()) %>%
left_join(tmp1, by="Actual") %>%
left_join(tmp2, by="Prediction") %>%
mutate(Recall=N/Nact,
Precision=N/Npred,
Fmeasure=(2*Recall*Precision)/(Recall+Precision))
d.i.a.mat
## Summary stats
d.i.a.mat %>% subset(Actual==Prediction) %>% ungroup() %>% summarize(Accuracy=sum(N)/sum(Nact)) # overall accuracy
d.i.a.mat %>% subset(Actual==Prediction) %>% ungroup() %>% summarize(Fmean=mean(Fmeasure)) # overall F measure (averaged)
## Visualization
d.i.a.mat %>% ggplot(aes(x=Prediction, y=Actual))+
geom_tile(aes(fill=Recall))+
geom_text(aes(label=round(Recall, 2)), size=6)+
scale_fill_gradient(limits=c(0,1), low="white", high="red", name="Prediction/\nActual")+
theme_bw()+
theme(axis.ticks=element_line(color = "black"),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
# ggsave(file=here("Figures", "Figure_S3_Anonym_Medium_CM_Best.png"), plot=gp, dpi=350, width=4.2, height=3)
ggsave(file=here("Figures", "Figure_S3_Anonym_Medium_CM_Worst.png"), plot=gp, dpi=350, width=4.2, height=3)
## Visualization: Prediction-Number correspondence
d.spec %>% group_by(trial, Prediction) %>% summarize(Prop=round(n()/40, 2)) %>%
ggplot(aes(x=trial, y=Prop, color=Prediction, shape=Prediction))+
annotate("rect", xmin=2.5, xmax=5.5, ymin=0, ymax=1, fill="#358688", alpha=0.2, color="white")+
annotate("rect", xmin=5.5, xmax=8.5, ymin=0, ymax=1, fill="#B73E35", alpha=0.2, color="white")+
geom_abline(slope=0, intercept=0.333, linetype="dashed", color="gray30", lwd=0.5)+
geom_point(size=3)+
geom_line(aes(group=Prediction), size=1)+
scale_y_continuous(limits=c(0,1), breaks=seq(0,1,0.2))+
scale_x_continuous(limits=c(1,10), breaks=1:10)+
labs(x="Numbered discs", y="Proportion of prediction")+
theme_bw()+
theme(axis.ticks=element_line(color = "black"),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
# ggsave(file=here("Figures", "Figure_S4_Anonym_Medium_Best.png"), plot=gp, dpi=350, width=5.2, height=4)
ggsave(file=here("Figures", "Figure_S4_Anonym_Medium_Worst.png"), plot=gp, dpi=350, width=5.2, height=4)
## Visualization: Prediction-Number correspondence
d.spec %>% group_by(trial, Prediction) %>% summarize(Prop=round(n()/40, 2)) %>%
ggplot(aes(x=trial, y=Prop, color=Prediction, shape=Prediction))+
annotate("rect", xmin=2.5, xmax=5.5, ymin=0, ymax=1, fill="#358688", alpha=0.2, color="white")+
annotate("rect", xmin=5.5, xmax=8.5, ymin=0, ymax=1, fill="#B73E35", alpha=0.2, color="white")+
geom_abline(slope=0, intercept=0.333, linetype="dashed", color="gray30", lwd=0.5)+
geom_point(size=3)+
geom_line(aes(group=Prediction), size=1)+
scale_y_continuous(limits=c(0,1), breaks=seq(0,1,0.2))+
scale_x_continuous(limits=c(1,10), breaks=1:10)+
labs(x="Numbered discs", y="Proportion of prediction")+
theme_bw()+
theme(axis.ticks=element_line(color = "black"),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
## Visualization: Prediction-Number correspondence
d.spec %>% group_by(trial, Prediction) %>% summarize(Prop=round(n()/40, 2)) #%>%
# Preparation
d.i.n <- d.i.n %>% mutate(tmp=str_replace_all(annotation, c("^ left$"="_right", "^ right$"="_left", "^ away$"="away", "^ noface$"="away")),
Prediction=str_replace_all(tmp, c("^_left$"="left", "^_right$"="right")),
Actual=case_when(trial==2|trial==3|trial==4|trial==5~"left", trial==6|trial==7|trial==8|trial==9~"right", T~"away"),
Y=case_when(Actual==Prediction~1, T~0))
d.i.a <- d.i.a %>% mutate(tmp=str_replace_all(annotation, c("^ left$"="_right", "^ right$"="_left", "^ away$"="away", "^ noface$"="away")),
Prediction=str_replace_all(tmp, c("^_left$"="left", "^_right$"="right")),
Actual=case_when(trial==2|trial==3|trial==4|trial==5~"left", trial==6|trial==7|trial==8|trial==9~"right", T~"away"),
Y=case_when(Actual==Prediction~1, T~0))
# Descriptive stats
d.i.n %>% group_by(Y) %>% summarize(N = n(), Prop = N/nrow(d.i.n)) %>% subset(Y==1) # Anonymisation(-)
d.i.a %>% group_by(Y) %>% summarize(N = n(), Prop = N/nrow(d.i.n)) %>% subset(Y==1) # Anonymisation(+)
# Regression modeling (Anonymisation(-))
fit.g.i.n <- glmer(Y ~ Lighting + Distance + Position + Rotation + Country + (1|id), data=d.i.n, family=binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(fit.g.i.n)
res.g.i.n <- ggpredict(fit.g.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Ireland"), type="fixed")
# res.g.i.n <- ggpredict(fit.g.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.g.i.n
res.g.i.n <- as.data.frame(res.g.i.n) %>% rename(Lighting=x, Distance=group, Rotation=facet, Position=panel) %>%
mutate(Rotation=str_replace_all(Rotation, c("^Center$"="Upright")),
Rotation=factor(Rotation, levels=c("Left", "Upright", "Right")))
res.g.i.n <- ggpredict(fit.g.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.g.i.n
res.g.i.n <- as.data.frame(res.g.i.n) %>% rename(Lighting=x, Distance=group, Rotation=facet, Position=panel) %>%
mutate(Rotation=str_replace_all(Rotation, c("^Center$"="Upright")),
Rotation=factor(Rotation, levels=c("Left", "Upright", "Right")))
res.g.i.n <- ggpredict(fit.g.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Ireland"), type="fixed")
# res.g.i.n <- ggpredict(fit.g.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.g.i.n
res.g.i.n <- as.data.frame(res.g.i.n) %>% rename(Lighting=x, Distance=group, Rotation=facet, Position=panel) %>%
mutate(Rotation=str_replace_all(Rotation, c("^Center$"="Upright")),
Rotation=factor(Rotation, levels=c("Left", "Upright", "Right")))
## Visualization
d.i.n %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(ncrr=sum(Y),
ncrr_prop=ncrr/1) %>%
mutate(Position=factor(Position, levels=c("Sl24"="Left (24 cm)", "Sc00"="Center", "Sr24"="Right (24 cm)")),
Lighting=factor(Lighting, levels=c("Left", "Front", "Right")),
Rotation=str_replace_all(Rotation, c("^Center$"="Upright")),
Rotation=factor(Rotation, levels=c("Left", "Upright", "Right"))) %>%
ggplot(aes(x=Lighting, y=ncrr_prop))+
geom_abline(slope=0, intercept=1/3, linetype="dashed", color="gray30", lwd=0.5)+
geom_jitter(width=0.2, height=0.05, color="gray70", size=0.1, alpha=0.3)+
geom_pointrange(data=res.g.i.n, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
scale_y_continuous(limits=c(-0.05,1.05), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of correct prediction")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
ggsave(file=here("Figures", "Figure_S2_NonAnonym__Large.png"), plot=gp, dpi=350, width=8, height=6.5)
## Confusion matrix
### Best condition
d.spec <- d.i.n %>% subset(Lighting=="Front" & Distance=="Close\n(30 cm)" & Position=="Center" & Rotation=="Center")
### Creating Confusion matrix
tmp1 <- d.spec %>% group_by(Actual) %>% summarize(Nact=n())
tmp2 <- d.spec %>% group_by(Prediction) %>% summarize(Npred=n())
d.i.n.mat <- d.spec %>% group_by(Actual, Prediction) %>% summarize(N=n()) %>%
left_join(tmp1, by="Actual") %>%
left_join(tmp2, by="Prediction") %>%
mutate(Recall=N/Nact,
Precision=N/Npred,
Fmeasure=(2*Recall*Precision)/(Recall+Precision))
d.i.n.mat
## Summary stats
d.i.n.mat %>% subset(Actual==Prediction) %>% ungroup() %>% summarize(Accuracy=sum(N)/sum(Nact)) # overall accuracy
d.i.n.mat %>% subset(Actual==Prediction) %>% ungroup() %>% summarize(Fmean=mean(Fmeasure)) # overall F measure (averaged)
## Visualization
d.i.n.mat %>% ggplot(aes(x=Prediction, y=Actual))+
geom_tile(aes(fill=Recall))+
geom_text(aes(label=round(Recall, 2)), size=6)+
scale_fill_gradient(limits=c(0,1), low="white", high="red", name="Prediction/\nActual")+
theme_bw()+
theme(axis.ticks=element_line(color = "black"),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
ggsave(file=here("Figures", "Figure_S2_NonAnonym_Large_CM_Best.png"), plot=gp, dpi=350, width=4.2, height=3)
## Visualization: Prediction-Number correspondence
d.spec %>% group_by(trial, Prediction) %>% summarize(Prop=round(n()/40, 2)) %>%
ggplot(aes(x=trial, y=Prop, color=Prediction, shape=Prediction))+
annotate("rect", xmin=1.5, xmax=5.5, ymin=0, ymax=1, fill="#358688", alpha=0.2, color="white")+
annotate("rect", xmin=5.5, xmax=9.5, ymin=0, ymax=1, fill="#B73E35", alpha=0.2, color="white")+
geom_abline(slope=0, intercept=0.333, linetype="dashed", color="gray30", lwd=0.5)+
geom_point(size=3)+
geom_line(aes(group=Prediction), size=1)+
scale_y_continuous(limits=c(0,1), breaks=seq(0,1,0.2))+
scale_x_continuous(limits=c(1,10), breaks=1:10)+
labs(x="Numbered discs", y="Proportion of prediction")+
theme_bw()+
theme(axis.ticks=element_line(color = "black"),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
ggsave(file=here("Figures", "Figure_S4_NonAnonym_Large_Best.png"), plot=gp, dpi=350, width=5.2, height=4)
### Worst condition
d.spec <- d.i.n %>% subset(Lighting=="Right" & Distance=="Far\n(90 cm)" & Position=="Left (24 cm)" & Rotation=="Right")
### Creating Confusion matrix
tmp1 <- d.spec %>% group_by(Actual) %>% summarize(Nact=n())
tmp2 <- d.spec %>% group_by(Prediction) %>% summarize(Npred=n())
d.i.n.mat <- d.spec %>% group_by(Actual, Prediction) %>% summarize(N=n()) %>%
left_join(tmp1, by="Actual") %>%
left_join(tmp2, by="Prediction") %>%
mutate(Recall=N/Nact,
Precision=N/Npred,
Fmeasure=(2*Recall*Precision)/(Recall+Precision))
d.i.n.mat
## Summary stats
d.i.n.mat %>% subset(Actual==Prediction) %>% ungroup() %>% summarize(Accuracy=sum(N)/sum(Nact)) # overall accuracy
d.i.n.mat %>% subset(Actual==Prediction) %>% ungroup() %>% summarize(Fmean=mean(Fmeasure)) # overall F measure (averaged)
## Visualization
d.i.n.mat %>% ggplot(aes(x=Prediction, y=Actual))+
geom_tile(aes(fill=Recall))+
geom_text(aes(label=round(Recall, 2)), size=6)+
scale_fill_gradient(limits=c(0,1), low="white", high="red", name="Prediction/\nActual")+
theme_bw()+
theme(axis.ticks=element_line(color = "black"),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
print(gp)
# ggsave(file=here("Figures", "Figure_S2_NonAnonym_Large_CM_Best.png"), plot=gp, dpi=350, width=4.2, height=3)
ggsave(file=here("Figures", "Figure_S2_NonAnonym_Large_CM_Worst.png"), plot=gp, dpi=350, width=4.2, height=3)
## Visualization: Prediction-Number correspondence
d.spec %>% group_by(trial, Prediction) %>% summarize(Prop=round(n()/40, 2)) %>%
ggplot(aes(x=trial, y=Prop, color=Prediction, shape=Prediction))+
annotate("rect", xmin=1.5, xmax=5.5, ymin=0, ymax=1, fill="#358688", alpha=0.2, color="white")+
annotate("rect", xmin=5.5, xmax=9.5, ymin=0, ymax=1, fill="#B73E35", alpha=0.2, color="white")+
geom_abline(slope=0, intercept=0.333, linetype="dashed", color="gray30", lwd=0.5)+
geom_point(size=3)+
geom_line(aes(group=Prediction), size=1)+
scale_y_continuous(limits=c(0,1), breaks=seq(0,1,0.2))+
scale_x_continuous(limits=c(1,10), breaks=1:10)+
labs(x="Numbered discs", y="Proportion of prediction")+
theme_bw()+
theme(axis.ticks=element_line(color = "black"),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
# ggsave(file=here("Figures", "Figure_S4_NonAnonym_Large_Best.png"), plot=gp, dpi=350, width=5.2, height=4)
ggsave(file=here("Figures", "Figure_S4_NonAnonym_Large_Worst.png"), plot=gp, dpi=350, width=5.2, height=4)
# Regression modeling (Anonymisation(+))
fit.g.i.a <- glmer(Y ~ Lighting + Distance + Position + Rotation + Country + (1|id), data=d.i.a, family=binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(fit.g.i.a)
res.g.i.a <- ggpredict(fit.g.i.a, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Ireland"), type="fixed")
# res.g.i.a <- ggpredict(fit.g.i.a, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.g.i.a
res.g.i.a <- as.data.frame(res.g.i.a) %>% rename(Lighting=x, Distance=group, Rotation=facet, Position=panel) %>%
mutate(Rotation=str_replace_all(Rotation, c("^Center$"="Upright")),
Rotation=factor(Rotation, levels=c("Left", "Upright", "Right")))
res.g.i.a <- ggpredict(fit.g.i.a, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.g.i.a
res.g.i.a <- as.data.frame(res.g.i.a) %>% rename(Lighting=x, Distance=group, Rotation=facet, Position=panel) %>%
mutate(Rotation=str_replace_all(Rotation, c("^Center$"="Upright")),
Rotation=factor(Rotation, levels=c("Left", "Upright", "Right")))
res.g.i.a <- ggpredict(fit.g.i.a, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Ireland"), type="fixed")
# res.g.i.a <- ggpredict(fit.g.i.a, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.g.i.a
res.g.i.a <- as.data.frame(res.g.i.a) %>% rename(Lighting=x, Distance=group, Rotation=facet, Position=panel) %>%
mutate(Rotation=str_replace_all(Rotation, c("^Center$"="Upright")),
Rotation=factor(Rotation, levels=c("Left", "Upright", "Right")))
## Visualization
d.i.a %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(ncrr=sum(Y),
ncrr_prop=ncrr/1) %>%
mutate(Position=factor(Position, levels=c("Sl24"="Left (24 cm)", "Sc00"="Center", "Sr24"="Right (24 cm)")),
Lighting=factor(Lighting, levels=c("Left", "Front", "Right")),
Rotation=str_replace_all(Rotation, c("^Center$"="Upright")),
Rotation=factor(Rotation, levels=c("Left", "Upright", "Right"))) %>%
ggplot(aes(x=Lighting, y=ncrr_prop))+
geom_abline(slope=0, intercept=1/3, linetype="dashed", color="gray30", lwd=0.5)+
geom_jitter(width=0.2, height=0.05, color="gray70", size=0.1, alpha=0.3)+
geom_pointrange(data=res.g.i.a, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
scale_y_continuous(limits=c(-0.05,1.05), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of correct prediction")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
ggsave(file=here("Figures", "Figure_S3_Anonym_Large.png"), plot=gp, dpi=350, width=8, height=6.5)
View(d.i.a)
## Confusion matrix
### Best condition
d.spec <- d.i.a %>% subset(Lighting=="Front" & Distance=="Close\n(30 cm)" & Position=="Center" & Rotation=="Center")
### Creating Confusion matrix
tmp1 <- d.spec %>% group_by(Actual) %>% summarize(Nact=n())
tmp2 <- d.spec %>% group_by(Prediction) %>% summarize(Npred=n())
d.i.a.mat <- d.spec %>% group_by(Actual, Prediction) %>% summarize(N=n()) %>%
left_join(tmp1, by="Actual") %>%
left_join(tmp2, by="Prediction") %>%
mutate(Recall=N/Nact,
Precision=N/Npred,
Fmeasure=(2*Recall*Precision)/(Recall+Precision))
d.i.a.mat
## Summary stats
d.i.a.mat %>% subset(Actual==Prediction) %>% ungroup() %>% summarize(Accuracy=sum(N)/sum(Nact)) # overall accuracy
d.i.a.mat %>% subset(Actual==Prediction) %>% ungroup() %>% summarize(Fmean=mean(Fmeasure)) # overall F measure (averaged)
## Visualization
d.i.a.mat %>% ggplot(aes(x=Prediction, y=Actual))+
geom_tile(aes(fill=Recall))+
geom_text(aes(label=round(Recall, 2)), size=6)+
scale_fill_gradient(limits=c(0,1), low="white", high="red", name="Prediction/\nActual")+
theme_bw()+
theme(axis.ticks=element_line(color = "black"),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
ggsave(file=here("Figures", "Figure_S3_Anonym_Large_CM_Best.png"), plot=gp, dpi=350, width=4.2, height=3)
## Visualization: Prediction-Number correspondence
d.spec %>% group_by(trial, Prediction) %>% summarize(Prop=round(n()/40, 2)) %>%
ggplot(aes(x=trial, y=Prop, color=Prediction, shape=Prediction))+
annotate("rect", xmin=1.5, xmax=5.5, ymin=0, ymax=1, fill="#358688", alpha=0.2, color="white")+
annotate("rect", xmin=5.5, xmax=9.5, ymin=0, ymax=1, fill="#B73E35", alpha=0.2, color="white")+
geom_abline(slope=0, intercept=0.333, linetype="dashed", color="gray30", lwd=0.5)+
geom_point(size=3)+
geom_line(aes(group=Prediction), size=1)+
scale_y_continuous(limits=c(0,1), breaks=seq(0,1,0.2))+
scale_x_continuous(limits=c(1,10), breaks=1:10)+
labs(x="Numbered discs", y="Proportion of prediction")+
theme_bw()+
theme(axis.ticks=element_line(color = "black"),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
ggsave(file=here("Figures", "Figure_S4_Anonym_Large_Best.png"), plot=gp, dpi=350, width=5.2, height=4)
### Worst condition
d.spec <- d.i.n %>% subset(Lighting=="Right" & Distance=="Far\n(90 cm)" & Position=="Left (24 cm)" & Rotation=="Right")
### Creating Confusion matrix
tmp1 <- d.spec %>% group_by(Actual) %>% summarize(Nact=n())
tmp2 <- d.spec %>% group_by(Prediction) %>% summarize(Npred=n())
d.i.n.mat <- d.spec %>% group_by(Actual, Prediction) %>% summarize(N=n()) %>%
left_join(tmp1, by="Actual") %>%
left_join(tmp2, by="Prediction") %>%
mutate(Recall=N/Nact,
Precision=N/Npred,
Fmeasure=(2*Recall*Precision)/(Recall+Precision))
d.i.n.mat
## Summary stats
d.i.n.mat %>% subset(Actual==Prediction) %>% ungroup() %>% summarize(Accuracy=sum(N)/sum(Nact)) # overall accuracy
d.i.n.mat %>% subset(Actual==Prediction) %>% ungroup() %>% summarize(Fmean=mean(Fmeasure)) # overall F measure (averaged)
## Visualization
d.i.n.mat %>% ggplot(aes(x=Prediction, y=Actual))+
geom_tile(aes(fill=Recall))+
geom_text(aes(label=round(Recall, 2)), size=6)+
scale_fill_gradient(limits=c(0,1), low="white", high="red", name="Prediction/\nActual")+
theme_bw()+
theme(axis.ticks=element_line(color = "black"),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
### Worst condition
d.spec <- d.i.a %>% subset(Lighting=="Right" & Distance=="Far\n(90 cm)" & Position=="Left (24 cm)" & Rotation=="Right")
### Creating Confusion matrix
tmp1 <- d.spec %>% group_by(Actual) %>% summarize(Nact=n())
tmp2 <- d.spec %>% group_by(Prediction) %>% summarize(Npred=n())
d.i.a.mat <- d.spec %>% group_by(Actual, Prediction) %>% summarize(N=n()) %>%
left_join(tmp1, by="Actual") %>%
left_join(tmp2, by="Prediction") %>%
mutate(Recall=N/Nact,
Precision=N/Npred,
Fmeasure=(2*Recall*Precision)/(Recall+Precision))
d.i.a.mat
## Summary stats
d.i.a.mat %>% subset(Actual==Prediction) %>% ungroup() %>% summarize(Accuracy=sum(N)/sum(Nact)) # overall accuracy
d.i.a.mat %>% subset(Actual==Prediction) %>% ungroup() %>% summarize(Fmean=mean(Fmeasure)) # overall F measure (averaged)
## Visualization
d.i.a.mat %>% ggplot(aes(x=Prediction, y=Actual))+
geom_tile(aes(fill=Recall))+
geom_text(aes(label=round(Recall, 2)), size=6)+
scale_fill_gradient(limits=c(0,1), low="white", high="red", name="Prediction/\nActual")+
theme_bw()+
theme(axis.ticks=element_line(color = "black"),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
# ggsave(file=here("Figures", "Figure_S3_Anonym_Large_CM_Best.png"), plot=gp, dpi=350, width=4.2, height=3)
ggsave(file=here("Figures", "Figure_S3_Anonym_Large_CM_Worst.png"), plot=gp, dpi=350, width=4.2, height=3)
## Visualization: Prediction-Number correspondence
d.spec %>% group_by(trial, Prediction) %>% summarize(Prop=round(n()/40, 2)) %>%
ggplot(aes(x=trial, y=Prop, color=Prediction, shape=Prediction))+
annotate("rect", xmin=1.5, xmax=5.5, ymin=0, ymax=1, fill="#358688", alpha=0.2, color="white")+
annotate("rect", xmin=5.5, xmax=9.5, ymin=0, ymax=1, fill="#B73E35", alpha=0.2, color="white")+
geom_abline(slope=0, intercept=0.333, linetype="dashed", color="gray30", lwd=0.5)+
geom_point(size=3)+
geom_line(aes(group=Prediction), size=1)+
scale_y_continuous(limits=c(0,1), breaks=seq(0,1,0.2))+
scale_x_continuous(limits=c(1,10), breaks=1:10)+
labs(x="Numbered discs", y="Proportion of prediction")+
theme_bw()+
theme(axis.ticks=element_line(color = "black"),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
# ggsave(file=here("Figures", "Figure_S4_Anonym_Large_Best.png"), plot=gp, dpi=350, width=5.2, height=4)
ggsave(file=here("Figures", "Figure_S4_Anonym_Large_Worst.png"), plot=gp, dpi=350, width=5.2, height=4)
