library(emmeans)   # ver 1.8.3
library(ggeffects) # ver 1.1.4
library(here)      # ver 1.0.1
library(irr)       # ver 0.84.1
library(lme4)      # ver 1.1.31
library(lmerTest)  # ver 3.1.3
library(tidyverse) # ver 1.3.2
# Preparation
d.i.n <- read.csv(here("Data", "SampledData", "_data_sampled_NonAnonymized_1.csv"), header=TRUE) %>%
mutate(Lighting=str_replace_all(lighting, c("Lc"="Front", "Ll"="Left", "Lr"="Right")),
Distance=str_replace_all(distance, c("D30"="Close\n(30 cm)", "D60"="Middle\n(60 cm)", "D90"="Far\n(90 cm)")),
Distance=factor(Distance, levels=c("Close\n(30 cm)", "Middle\n(60 cm)", "Far\n(90 cm)")),
Position=str_replace_all(side, c("Sc00"="Center", "Sl24"="Left (24 cm)", "Sr24"="Right (24 cm)")),
Rotation=str_replace_all(rotation, c("Rc"="Center", "Rl"="Left", "Rr"="Right")),
Country=substr(id,1,1),
Country=str_replace_all(Country, c("c"="Ireland", "t"="Japan")),
face=case_when(annotation==" noface" ~ 0, T~1)) %>%
dplyr::select(-lighting, -distance, -side, -rotation)
d.i.a <- read.csv(here("Data", "SampledData", "_data_sampled_Anonymized_1.csv"), header=TRUE) %>%
mutate(Lighting=str_replace_all(lighting, c("Lc"="Front", "Ll"="Left", "Lr"="Right")),
Distance=str_replace_all(distance, c("D30"="Close\n(30 cm)", "D60"="Middle\n(60 cm)", "D90"="Far\n(90 cm)")),
Distance=factor(Distance, levels=c("Close\n(30 cm)", "Middle\n(60 cm)", "Far\n(90 cm)")),
Position=str_replace_all(side, c("Sc00"="Center", "Sl24"="Left (24 cm)", "Sr24"="Right (24 cm)")),
Rotation=str_replace_all(rotation, c("Rc"="Center", "Rl"="Left", "Rr"="Right")),
Country=substr(id,1,1),
Country=str_replace_all(Country, c("c"="Ireland", "t"="Japan")),
face=case_when(annotation==" noface" ~ 0, T~1)) %>%
dplyr::select(-lighting, -distance, -side, -rotation)
# Descriptive stats
d.i.n %>% group_by(face) %>% summarize(N = n(), Prop = N/nrow(d.i.n)) %>% subset(face==1) # Anonymisation(-)
d.i.a %>% group_by(face) %>% summarize(N = n(), Prop = N/nrow(d.i.n)) %>% subset(face==1) # Anonymisation(+)
# Regression modeling (Anonymisation(-))
fit.f.i.n <- glmer(face ~ Lighting + Distance + Position + Rotation + Country + (1|id), data=d.i.n, family=binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(fit.f.i.n)
res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Ireland"), type="fixed")
# res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.f.i.n
res.f.i.n <- res.f.i.n %>% mutate(Lighting=x, Distance=group, Rotation=facet, Position=panel)
## Visualization
d.i.n %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(nface=sum(face),
nface_prop=nface/1) %>%
ggplot(aes(x=Lighting, y=nface_prop))+
geom_abline(slope=0, intercept=0.5, linetype="dashed", color="gray30", lwd=0.5)+
geom_jitter(width=0.2, height=0.05, color="gray70", size=0.1, alpha=0.3)+
geom_pointrange(data=res.f.i.n, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
scale_y_continuous(limits=c(-0.05,1.05), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of face detected")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
## Visualization
d.i.n %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(nface=sum(face),
nface_prop=nface/1) %>%
mutate(Position=factor(Position, levels=c("Sl24"="Left (24 cm)", "Sc00"="Center", "Sr24"="Right (24 cm)"))) %>%
ggplot(aes(x=Lighting, y=nface_prop))+
geom_abline(slope=0, intercept=0.5, linetype="dashed", color="gray30", lwd=0.5)+
geom_jitter(width=0.2, height=0.05, color="gray70", size=0.1, alpha=0.3)+
geom_pointrange(data=res.f.i.n, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
scale_y_continuous(limits=c(-0.05,1.05), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of face detected")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
## Visualization
d.i.n %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(nface=sum(face),
nface_prop=nface/1) %>%
mutate(Position=factor(Position, levels=c("Sl24"="Left (24 cm)", "Sc00"="Center", "Sr24"="Right (24 cm)")),
Lighting=factor(Lighting, levels=c("Left", "Front", "Right"))) %>%
ggplot(aes(x=Lighting, y=nface_prop))+
geom_abline(slope=0, intercept=0.5, linetype="dashed", color="gray30", lwd=0.5)+
geom_jitter(width=0.2, height=0.05, color="gray70", size=0.1, alpha=0.3)+
geom_pointrange(data=res.f.i.n, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
scale_y_continuous(limits=c(-0.05,1.05), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of face detected")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
## Visualization
d.i.n %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(nface=sum(face),
nface_prop=nface/1) %>%
mutate(Position=factor(Position, levels=c("Sl24"="Left (24 cm)", "Sc00"="Center", "Sr24"="Right (24 cm)")),
Lighting=factor(Lighting, levels=c("Left", "Front", "Right"))) %>%
ggplot(aes(x=Lighting, y=nface_prop))+
geom_abline(slope=0, intercept=0.5, linetype="dashed", color="gray30", lwd=0.5)+
geom_jitter(width=0.2, height=0.04, color="gray70", size=0.1, alpha=0.3)+
geom_pointrange(data=res.f.i.n, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
scale_y_continuous(limits=c(-0.05,1.05), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of face detected")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
## Visualization
d.i.n %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(nface=sum(face),
nface_prop=nface/1) %>%
mutate(Position=factor(Position, levels=c("Sl24"="Left (24 cm)", "Sc00"="Center", "Sr24"="Right (24 cm)")),
Lighting=factor(Lighting, levels=c("Left", "Front", "Right"))) %>%
ggplot(aes(x=Lighting, y=nface_prop))+
geom_abline(slope=0, intercept=0.5, linetype="dashed", color="gray30", lwd=0.5)+
geom_jitter(width=0.2, height=0.02, color="gray70", size=0.1, alpha=0.3)+
geom_pointrange(data=res.f.i.n, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
scale_y_continuous(limits=c(-0.05,1.05), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of face detected")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
## Visualization
d.i.n %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(nface=sum(face),
nface_prop=nface/1) %>%
mutate(Position=factor(Position, levels=c("Sl24"="Left (24 cm)", "Sc00"="Center", "Sr24"="Right (24 cm)")),
Lighting=factor(Lighting, levels=c("Left", "Front", "Right"))) %>%
ggplot(aes(x=Lighting, y=nface_prop))+
geom_abline(slope=0, intercept=0.5, linetype="dashed", color="gray30", lwd=0.5)+
geom_jitter(width=0.2, height=0.05, color="gray70", size=0.1, alpha=0.3)+
geom_pointrange(data=res.f.i.n, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
scale_y_continuous(limits=c(-0.07,1.07), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of face detected")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
## Visualization
d.i.n %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(nface=sum(face),
nface_prop=nface/1) %>%
mutate(Position=factor(Position, levels=c("Sl24"="Left (24 cm)", "Sc00"="Center", "Sr24"="Right (24 cm)")),
Lighting=factor(Lighting, levels=c("Left", "Front", "Right"))) %>%
ggplot(aes(x=Lighting, y=nface_prop))+
geom_abline(slope=0, intercept=0.5, linetype="dashed", color="gray30", lwd=0.5)+
geom_jitter(width=0.2, height=0.05, color="gray70", size=0.1, alpha=0.3)+
geom_pointrange(data=res.f.i.n, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
# scale_y_continuous(limits=c(-0.05,1.05), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of face detected")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
## Visualization
d.i.n %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(nface=sum(face),
nface_prop=nface/1) %>%
mutate(Position=factor(Position, levels=c("Sl24"="Left (24 cm)", "Sc00"="Center", "Sr24"="Right (24 cm)")),
Lighting=factor(Lighting, levels=c("Left", "Front", "Right"))) %>%
ggplot(aes(x=Lighting, y=nface_prop))+
geom_abline(slope=0, intercept=0.5, linetype="dashed", color="gray30", lwd=0.5)+
# geom_jitter(width=0.2, height=0.05, color="gray70", size=0.1, alpha=0.3)+
geom_pointrange(data=res.f.i.n, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
scale_y_continuous(limits=c(-0.05,1.05), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of face detected")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
## Visualization
d.i.n %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(nface=sum(face),
nface_prop=nface/1) %>%
mutate(Position=factor(Position, levels=c("Sl24"="Left (24 cm)", "Sc00"="Center", "Sr24"="Right (24 cm)")),
Lighting=factor(Lighting, levels=c("Left", "Front", "Right"))) %>%
ggplot(aes(x=Lighting, y=nface_prop))+
geom_abline(slope=0, intercept=0.5, linetype="dashed", color="gray30", lwd=0.5)+
geom_jitter(width=0.2, height=0.05, color="gray70", size=0.1, alpha=0.3)+
geom_pointrange(data=res.f.i.n, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
scale_y_continuous(limits=c(-0.05,1.05), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of face detected")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
View(d.i.n)
d.i.n %>% str())
d.i.n %>% str()
d.i.n %>% summary()
## Visualization
d.i.n %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(nface=sum(face),
nface_prop=nface/1) %>%
mutate(Position=factor(Position, levels=c("Sl24"="Left (24 cm)", "Sc00"="Center", "Sr24"="Right (24 cm)")),
Lighting=factor(Lighting, levels=c("Left", "Front", "Right"))) %>%
ggplot(aes(x=Lighting, y=nface_prop))+
geom_abline(slope=0, intercept=0.5, linetype="dashed", color="gray30", lwd=0.5)+
geom_jitter(width=0.2, height=0.05, color="gray70", size=0.1, alpha=0.3)+
geom_pointrange(data=res.f.i.n, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
scale_y_continuous(limits=c(-0.05,1.05), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of face detected")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
## Visualization
d.i.n %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(nface=sum(face),
nface_prop=nface/1) %>%
mutate(Position=factor(Position, levels=c("Sl24"="Left (24 cm)", "Sc00"="Center", "Sr24"="Right (24 cm)")),
Lighting=factor(Lighting, levels=c("Left", "Front", "Right"))) %>%
ggplot(aes(x=Lighting, y=nface_prop))+
geom_abline(slope=0, intercept=0.5, linetype="dashed", color="gray30", lwd=0.5)+
geom_jitter(width=0.2, height=0.05, color="gray70", size=0.1, alpha=0.3)+
# geom_pointrange(data=res.f.i.n, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
# scale_y_continuous(limits=c(-0.05,1.05), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of face detected")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
## Visualization
d.i.n %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(nface=sum(face),
nface_prop=nface/1) %>%
mutate(Position=factor(Position, levels=c("Sl24"="Left (24 cm)", "Sc00"="Center", "Sr24"="Right (24 cm)")),
Lighting=factor(Lighting, levels=c("Left", "Front", "Right"))) %>%
ggplot(aes(x=Lighting, y=nface_prop))+
geom_abline(slope=0, intercept=0.5, linetype="dashed", color="gray30", lwd=0.5)+
geom_jitter(width=0.2, height=0.05, color="gray70", size=0.1, alpha=0.3)+
geom_pointrange(data=res.f.i.n, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
scale_y_continuous(limits=c(-0.05,1.05), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of face detected")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
View(res.f.i.n)
res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Ireland"), type="fixed")
# res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.f.i.n
View(res.f.i.n)
# Regression modeling (Anonymisation(-))
fit.f.i.n <- glmer(face ~ Lighting + Distance + Position + Rotation + Country + (1|id), data=d.i.n, family=binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(fit.f.i.n)
res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Ireland"), type="fixed")
View(res.f.i.n)
res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), type="fixed")
res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), type="fixed")
# res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.f.i.n
res.f.i.n <- res.f.i.n %>% mutate(Lighting=x, Distance=group, Rotation=facet, Position=panel)
# Regression modeling (Anonymisation(-))
fit.f.i.n <- glmer(face ~ Lighting + Distance + Position + Rotation + Country + (1|id), data=d.i.n, family=binomial)
res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Ireland"), type="fixed")
# Regression modeling (Anonymisation(-))
fit.f.i.n <- glmer(face ~ Lighting + Distance + Position + Rotation + Country + (1|id), data=d.i.n, family=binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
install.packages("ggeffects")
install.packages("ggeffects")
install.packages("ggeffects")
Version(ggeffects)
Version("ggeffects")
package.Version("ggeffects")
package_version(ggeffects)
library(ggeffects) # ver 1.1.4
package_version("ggeffects")
packageVersion(ggeffects)
packageVersion("ggeffects")
# Preparation
d.i.n <- read.csv(here("Data", "SampledData", "_data_sampled_NonAnonymized_1.csv"), header=TRUE) %>%
mutate(Lighting=str_replace_all(lighting, c("Lc"="Front", "Ll"="Left", "Lr"="Right")),
Distance=str_replace_all(distance, c("D30"="Close\n(30 cm)", "D60"="Middle\n(60 cm)", "D90"="Far\n(90 cm)")),
Distance=factor(Distance, levels=c("Close\n(30 cm)", "Middle\n(60 cm)", "Far\n(90 cm)")),
Position=str_replace_all(side, c("Sc00"="Center", "Sl24"="Left (24 cm)", "Sr24"="Right (24 cm)")),
Rotation=str_replace_all(rotation, c("Rc"="Center", "Rl"="Left", "Rr"="Right")),
Country=substr(id,1,1),
Country=str_replace_all(Country, c("c"="Ireland", "t"="Japan")),
face=case_when(annotation==" noface" ~ 0, T~1)) %>%
dplyr::select(-lighting, -distance, -side, -rotation)
d.i.a <- read.csv(here("Data", "SampledData", "_data_sampled_Anonymized_1.csv"), header=TRUE) %>%
mutate(Lighting=str_replace_all(lighting, c("Lc"="Front", "Ll"="Left", "Lr"="Right")),
Distance=str_replace_all(distance, c("D30"="Close\n(30 cm)", "D60"="Middle\n(60 cm)", "D90"="Far\n(90 cm)")),
Distance=factor(Distance, levels=c("Close\n(30 cm)", "Middle\n(60 cm)", "Far\n(90 cm)")),
Position=str_replace_all(side, c("Sc00"="Center", "Sl24"="Left (24 cm)", "Sr24"="Right (24 cm)")),
Rotation=str_replace_all(rotation, c("Rc"="Center", "Rl"="Left", "Rr"="Right")),
Country=substr(id,1,1),
Country=str_replace_all(Country, c("c"="Ireland", "t"="Japan")),
face=case_when(annotation==" noface" ~ 0, T~1)) %>%
dplyr::select(-lighting, -distance, -side, -rotation)
library(emmeans)   # ver 1.8.3
library(ggeffects) # ver 1.2.3
library(here)      # ver 1.0.1
library(irr)       # ver 0.84.1
library(lme4)      # ver 1.1.31
library(lmerTest)  # ver 3.1.3
library(tidyverse) # ver 1.3.2
# -----------------------------------------------------------------------------------------
# Inter-trial reliability check
d.r <- read.csv(here("Data", "reliability_check.csv"), header=TRUE) %>%
mutate(x1 = same_direction,
x2 = case_when(same_direction=="1" ~ "1", same_direction=="0" ~ "1", T ~ "N/A"))
# Number of frames that were unable to detect face directions
noface <- d.r %>% subset(same_direction=="N/A") %>% nrow()
noface
noface / nrow(d.r) * 100 # 2/840 = 0.24%
# Agreement
d.r <- d.r %>% subset(same_direction!="N/A")
table(d.r$x1, d.r$x2)
agree(cbind(d.r$x1, d.r$x2))
# Preparation
d.i.n <- read.csv(here("Data", "SampledData", "_data_sampled_NonAnonymized_1.csv"), header=TRUE) %>%
mutate(Lighting=str_replace_all(lighting, c("Lc"="Front", "Ll"="Left", "Lr"="Right")),
Distance=str_replace_all(distance, c("D30"="Close\n(30 cm)", "D60"="Middle\n(60 cm)", "D90"="Far\n(90 cm)")),
Distance=factor(Distance, levels=c("Close\n(30 cm)", "Middle\n(60 cm)", "Far\n(90 cm)")),
Position=str_replace_all(side, c("Sc00"="Center", "Sl24"="Left (24 cm)", "Sr24"="Right (24 cm)")),
Rotation=str_replace_all(rotation, c("Rc"="Center", "Rl"="Left", "Rr"="Right")),
Country=substr(id,1,1),
Country=str_replace_all(Country, c("c"="Ireland", "t"="Japan")),
face=case_when(annotation==" noface" ~ 0, T~1)) %>%
dplyr::select(-lighting, -distance, -side, -rotation)
d.i.a <- read.csv(here("Data", "SampledData", "_data_sampled_Anonymized_1.csv"), header=TRUE) %>%
mutate(Lighting=str_replace_all(lighting, c("Lc"="Front", "Ll"="Left", "Lr"="Right")),
Distance=str_replace_all(distance, c("D30"="Close\n(30 cm)", "D60"="Middle\n(60 cm)", "D90"="Far\n(90 cm)")),
Distance=factor(Distance, levels=c("Close\n(30 cm)", "Middle\n(60 cm)", "Far\n(90 cm)")),
Position=str_replace_all(side, c("Sc00"="Center", "Sl24"="Left (24 cm)", "Sr24"="Right (24 cm)")),
Rotation=str_replace_all(rotation, c("Rc"="Center", "Rl"="Left", "Rr"="Right")),
Country=substr(id,1,1),
Country=str_replace_all(Country, c("c"="Ireland", "t"="Japan")),
face=case_when(annotation==" noface" ~ 0, T~1)) %>%
dplyr::select(-lighting, -distance, -side, -rotation)
# Descriptive stats
d.i.n %>% group_by(face) %>% summarize(N = n(), Prop = N/nrow(d.i.n)) %>% subset(face==1) # Anonymisation(-)
d.i.a %>% group_by(face) %>% summarize(N = n(), Prop = N/nrow(d.i.n)) %>% subset(face==1) # Anonymisation(+)
# Regression modeling (Anonymisation(-))
fit.f.i.n <- glmer(face ~ Lighting + Distance + Position + Rotation + Country + (1|id), data=d.i.n, family=binomial,
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
summary(fit.f.i.n)
res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Ireland"), type="fixed")
# res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.f.i.n
res.f.i.n <- res.f.i.n %>% mutate(Lighting=x, Distance=group, Rotation=facet, Position=panel)
View(res.f.i.n)
View(res.f.i.n)
## Visualization
d.i.n %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(nface=sum(face),
nface_prop=nface/1) %>%
mutate(Position=factor(Position, levels=c("Sl24"="Left (24 cm)", "Sc00"="Center", "Sr24"="Right (24 cm)")),
Lighting=factor(Lighting, levels=c("Left", "Front", "Right"))) %>%
ggplot(aes(x=Lighting, y=nface_prop))+
geom_abline(slope=0, intercept=0.5, linetype="dashed", color="gray30", lwd=0.5)+
geom_jitter(width=0.2, height=0.05, color="gray70", size=0.1, alpha=0.3)+
geom_pointrange(data=res.f.i.n, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
scale_y_continuous(limits=c(-0.05,1.05), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of face detected")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
summary(fit.f.i.n)
res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Ireland"), type="fixed")
# res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.f.i.n
View(res.f.i.n)
res.f.i.n <- res.f.i.n %>% mutate(Lighting=x, Distance=group, Rotation=facet, Position=panel)
View(res.f.i.n)
# res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.f.i.n
res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Ireland"), type="fixed")
View(res.f.i.n)
# res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.f.i.n <- as.data.frame(res.f.i.n)
View(res.f.i.n)
res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Ireland"), type="fixed")
# res.f.i.n <- ggpredict(fit.f.i.n, terms=c("Lighting", "Distance", "Rotation", "Position"), condition=c(Country="Japan"), type="fixed")
res.f.i.n
res.f.i.n <- as.data.frame(res.f.i.n) %>% rename(Lighting=x, Distance=group, Rotation=facet, Position=panel)
View(res.f.i.n)
## Visualization
d.i.n %>% group_by(id, Lighting, Distance, Position, Rotation, trial, filename, Country) %>%
summarize(nface=sum(face),
nface_prop=nface/1) %>%
mutate(Position=factor(Position, levels=c("Sl24"="Left (24 cm)", "Sc00"="Center", "Sr24"="Right (24 cm)")),
Lighting=factor(Lighting, levels=c("Left", "Front", "Right"))) %>%
ggplot(aes(x=Lighting, y=nface_prop))+
geom_abline(slope=0, intercept=0.5, linetype="dashed", color="gray30", lwd=0.5)+
geom_jitter(width=0.2, height=0.05, color="gray70", size=0.1, alpha=0.3)+
geom_pointrange(data=res.f.i.n, aes(y=predicted, ymin=conf.low, ymax=conf.high, color=Rotation, shape=Rotation), position=position_dodge(0.7), linewidth=0.8)+
scale_y_continuous(limits=c(-0.05,1.05), breaks=seq(0,1,0.25))+
labs(x="Lighting", y="Proportion of face detected")+
theme_bw()+
facet_grid(Distance~Position)+
theme(axis.ticks=element_line(color = "black"),
axis.text.x=element_text(size=14, color = "black", angle=45, hjust=1),
axis.text=element_text(size=14, color = "black"),
axis.title=element_text(size=14, color="black"),
strip.text=element_text(size=14),
legend.title=element_text(size=14, color="black", hjust=0.2),
legend.text=element_text(size=12, color="black")) -> gp
print(gp)
output_fig_dir <- here("Figures")
if (!dir.exists(output_fig_dir)){
dir.create(output_fig_dir, recursive=TRUE)
}
ggsave(file=here("Figures", "Figure_3.png"), plot=gp, dpi=350, width=8, height=6.5)
